/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pollutrack;

import static com.mycompany.pollutrack.Register.isNumeric;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author ahmad
 */
public class AddData extends javax.swing.JFrame {
    boolean isT=false;
    String ubahapa="";
    String isiUbah="";
    int nomor=0;
    /**
     * Creates new form AddData
     */
    public AddData() {
        initComponents();
        indeks2.setText(TambahPencemaran.user);
         setLocationRelativeTo(null);
        if(!TambahPencemaran.pencemaran.equals("tanah"))
            isT=true;
        istanah.setVisible(isT);
        if(TambahPencemaran.pencemaran.equals("tanah"))
            indeks1.setText("Tingkat Pencemaran Tanah:");
        if(TambahPencemaran.pencemaran.equals("air"))
            indeks1.setText("Indeks Pencemar:");
        
        if(TambahPencemaran.pencemaran.equals("udara"))
            indeks1.setText("ISPU:");
        String jdbcURL = "jdbc:sqlserver://localhost:1433;databaseName=BDKEL6;encrypt=true;trustServerCertificate=true;";
        String usernameDB = "sa";
        String passwordDB = "fafa12345";
        try (Connection connection = DriverManager.getConnection(jdbcURL, usernameDB, passwordDB)) {
            // Step 1: Create a statement
            Statement statement = connection.createStatement();

            // Step 2: Execute a query to fetch data from the database
            String selectDataSQL = String.format("SELECT Nomor From Pencemaran_%s", TambahPencemaran.pencemaran);
            ResultSet resultSet = statement.executeQuery(selectDataSQL);

        
            while (resultSet.next()) {
                nomor=resultSet.getInt("Nomor");
            }
            
            

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        indeks1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        istanah = new javax.swing.JPanel();
        parammasuk = new javax.swing.JTextField();
        parameterkritis = new javax.swing.JLabel();
        indeksmasuk = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        indeks = new javax.swing.JLabel();
        indeks2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        indeks1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        indeks1.setText("jLabel1");

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        parameterkritis.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        parameterkritis.setText("Parameter Kritis:");

        javax.swing.GroupLayout istanahLayout = new javax.swing.GroupLayout(istanah);
        istanah.setLayout(istanahLayout);
        istanahLayout.setHorizontalGroup(
            istanahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, istanahLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(istanahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(parameterkritis, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(parammasuk)))
        );
        istanahLayout.setVerticalGroup(
            istanahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(istanahLayout.createSequentialGroup()
                .addComponent(parameterkritis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(parammasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        indeksmasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indeksmasukActionPerformed(evt);
            }
        });

        jButton2.setText("Tambah");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        indeks.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        indeks.setText("PENAMBAHAN DATA");

        indeks2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        indeks2.setText("Kosongkan Jika Data Tetap");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(indeksmasuk)
                        .addComponent(indeks, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                        .addComponent(indeks1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                        .addComponent(indeks2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                    .addComponent(istanah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(indeks)
                .addGap(17, 17, 17)
                .addComponent(indeks2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(indeks1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(indeksmasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istanah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    void ubahudara(){
        String jdbcURL = "jdbc:sqlserver://localhost:1433;databaseName=BDKEL6;encrypt=true;trustServerCertificate=true;";
        String usernameDB = "sa";
        String passwordDB = "fafa12345";
         
         try (Connection connection = DriverManager.getConnection(jdbcURL, usernameDB, passwordDB);
             PreparedStatement statement = connection.prepareStatement(String.format("INSERT INTO Pencemaran_udara VALUES(%d,'%s',(SELECT ID_LOKASI FROM LOKASI WHERE NAMA_LOKASI='%s'),%s,'%s')",(nomor+1),"UDR-"+(nomor+1),TambahPencemaran.user,indeksmasuk.getText(),parammasuk.getText()))){
          
           statement.executeUpdate();
           
            
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage());
        }
    }
    void ubahair(){
        String jdbcURL = "jdbc:sqlserver://localhost:1433;databaseName=BDKEL6;encrypt=true;trustServerCertificate=true;";
        String usernameDB = "sa";
        String passwordDB = "fafa12345";
         
         try (Connection connection = DriverManager.getConnection(jdbcURL, usernameDB, passwordDB);
             PreparedStatement statement = connection.prepareStatement(String.format("INSERT INTO Pencemaran_air VALUES(%d,'%s',(SELECT ID_LOKASI FROM LOKASI WHERE NAMA_LOKASI='%s'),%s,'%s')",(nomor+1),"AIR-"+(nomor+1),TambahPencemaran.user,indeksmasuk.getText(),parammasuk.getText()));){
          
           statement.executeUpdate();
           
            
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage());
        }
    }
    void ubahtanah(){
        String jdbcURL = "jdbc:sqlserver://localhost:1433;databaseName=BDKEL6;encrypt=true;trustServerCertificate=true;";
        String usernameDB = "sa";
        String passwordDB = "fafa12345";
         
         try (Connection connection = DriverManager.getConnection(jdbcURL, usernameDB, passwordDB);
             PreparedStatement statement = connection.prepareStatement(String.format("INSERT INTO Pencemaran_tanah VALUES ((SELECT ID_LOKASI FROM LOKASI WHERE NAMA_LOKASI='%s'),'%s',%s,%d)",TambahPencemaran.user,"TNH-"+(nomor+1),indeksmasuk.getText(),nomor+1))){
          
           statement.executeUpdate();
           
            
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage());
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(indeksmasuk.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Data Indeks Jangan Kosong");
            return;
        }
         if(isNumeric(indeksmasuk.getText())){
             insert();
            JOptionPane.showMessageDialog(this, "Insert Data Berhasil");
            TambahPencemaran.tmbh.setVisible(false);
            TambahPencemaran.modif.setVisible(true);
            TambahPencemaran.fetchuser.setVisible(true);
            TambahPencemaran.fetchtable(TambahPencemaran.pencemaran);
            this.dispose();
            
             return;
        }
         JOptionPane.showMessageDialog(this, indeks1.getText()+" Harus Angka");
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void indeksmasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indeksmasukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indeksmasukActionPerformed
    void insert(){
         if(TambahPencemaran.pencemaran.equals("udara")){
            ubahudara();
            return;
        }
        if(TambahPencemaran.pencemaran.equals("air")){
            ubahair();  
            return;
        }
        if(TambahPencemaran.pencemaran.equals("tanah")){
            ubahtanah();
        }
    }
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel indeks;
    private javax.swing.JLabel indeks1;
    private javax.swing.JLabel indeks2;
    private javax.swing.JTextField indeksmasuk;
    private javax.swing.JPanel istanah;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel parameterkritis;
    private javax.swing.JTextField parammasuk;
    // End of variables declaration//GEN-END:variables
}
